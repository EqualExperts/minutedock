exitIfError() {
	rc=$?
	if [[ $rc != 0 ]] ; then
		git checkout master
	    exit $rc
	fi
}

if [ "$#" -eq 0 ]; then
    echo "Provide a version tag. Usage - './release <tag>'. Exiting."
    exit 1;
fi

TAG=$1 

git checkout release
exitIfError
git pull --rebase
exitIfError
git merge master
exitIfError

rm -rf minutedock-dist*
mkdir minutedock-dist

cd ../build
./build min

cd ../
rsync -avzR --exclude logs --exclude sslcert --exclude *.back src/node release/minutedock-dist
cp --parents -r src/static/images release/minutedock-dist
cp --parents -r src/static/views release/minutedock-dist
cp --parents src/static/js/main.min.js release/minutedock-dist
cp --parents src/static/js/lib/*.html release/minutedock-dist
cp --parents src/static/js/lib/require.js release/minutedock-dist
cp --parents src/static/stylesheets/style.min.css release/minutedock-dist
cp start release/minutedock-dist
cp stop release/minutedock-dist
cp restart release/minutedock-dist

cd release/
./runReleaseTests
exitIfError
rm -rf minutedock-dist/src/node/node_modules
rm -rf minutedock-dist/*.log

git push
exitIfError

zip -r minutedock-dist-$TAG.zip minutedock-dist

curl -u "anshulbajpai" -H "Content-Type: application/json" -d "{\"tag_name\": \"$TAG\", 
\"target_commitish\": \"release\", 
\"name\": \"$TAG\", 
\"draft\": false, 
\"prerelease\": false}" https://api.github.com/repos/anshulbajpai/minutedock/releases > createReleaseResponse.txt

exitIfError

releaseId=$(grep -m 1 "\"id\":" createReleaseResponse.txt | sed -r "s/.*\"id\": (.*),.*/\1/")

if [[ "$releaseId" == "" ]] ; then
	echo "Could not create release - Error given below"
	cat createReleaseResponse.txt
	rm createReleaseResponse.txt
	git checkout master
    exit 1
fi
rm createReleaseResponse.txt
echo "Release id is $releaseId"

curl -u "anshulbajpai" -F "file=@minutedock-dist-$TAG.zip;type=application/zip" \
https://uploads.github.com/repos/anshulbajpai/minutedock/releases/$releaseId/assets?name=minutedock-dist-$TAG.zip

exitIfError

rm -rf minutedock-dist*
git checkout master