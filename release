exitIfError() {
	rc=$?
	if [[ $rc != 0 ]] ; then
		git checkout master
	    exit $rc
	fi
}

if [ "$#" -eq 0 ]; then
    echo "Provide a version tag. Usage - './release <tag>'. Exiting."
    exit 1;
fi

TAG=$1 

git checkout release
exitIfError
git pull --rebase
exitIfError
git merge master
exitIfError

cd test
./runTests
exitIfError
cd ../

git push
exitIfError

rm -rf dist*
mkdir dist

rsync -avzR --exclude logs --exclude node_modules --exclude sslcert --exclude *.back src/node ./dist
cp --parents -r src/static/images ./dist
cp --parents -r src/static/views ./dist
cp --parents src/static/js/main.min.js ./dist
cp --parents src/static/js/lib/*.html ./dist
cp --parents src/static/stylesheets/style.min.css ./dist
cp start ./dist
cp stop ./dist
cp restart ./dist
zip -r dist-$TAG.zip dist

id=$(curl -u "anshulbajpai" -H "Content-Type: application/json" -d "{'tag_name': '$TAG', 
'target_commitish': 'release', 
'name': '$TAG', 
'draft': false, 
'prerelease': false}" https://api.github.com/repos/anshulbajpai/minutedock/releases \
| grep -m 1 "id" | sed -r "s/.*\"id\": (.*),.*/\1/")

exitIfError

echo "Release id is $id"

curl -u "anshulbajpai" -F "file=@dist-$TAG.zip;type=application/zip" \
https://uploads.github.com/repos/anshulbajpai/minutedock/releases/$id/assets?name=dist-$TAG.zip

exitIfError

git checkout master