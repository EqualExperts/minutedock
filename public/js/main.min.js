define("modules/app",["angular","angular-cookies","angular-storage"],function(e){return e.module("app",["ngCookies","ngStorage"])}),define("interceptors/loadingInterceptor",["modules/app"],function(e){e.config(["$httpProvider",function(e){e.interceptors.push(["$q","$injector",function(e,t){var n;return{request:function(r){return n=n||t.get("$rootScope"),n.alert=null,n.ajaxLoader=!0,r||e.when(r)},response:function(r){return n=n||t.get("$rootScope"),n.ajaxLoader=!1,r||e.when(r)},responseError:function(r){return n=n||t.get("$rootScope"),n.ajaxLoader=!1,e.reject(r)}}}])}])}),define("interceptors/authenticationInterceptor",["modules/app"],function(e){e.config(["$httpProvider",function(e){e.interceptors.push(["$q","$location","$sessionStorage",function(e,t,n){return{responseError:function(r){if(r.status==401){delete n.contacts,delete n.projects;var i=t.search().sendTo;i?t.search("sendTo",i):t.url()!="/"&&t.url()!="/login"&&t.search("sendTo",t.url()),t.path("/login")}return e.reject(r)}}}])}])}),define("service/redirectService",["modules/app"],function(e){e.service("redirectService",["$location","loginService",function(e,t){this.validateLogin=function(){t.validateLogin().then(function(){e.path("/entries/current")}).then(null,function(){e.path("/login")})},this.currentEntries=function(){var t=new Date,n=t.getMonth()+1,r=t.getFullYear();e.path("/entries/"+n+"/"+r)}}])}),define("service/loginService",["modules/app"],function(e){e.service("loginService",["$http",function(e){this.login=function(t,n){return e({method:"GET",url:"/accounts/active",headers:{Authorization:"Basic "+btoa(t+":"+n)}})},this.validateLogin=function(){return e.get("/accounts/validate")}}])}),define("service/contactsService",["modules/app"],function(e){e.service("contactsService",["$http",function(e){this.getContacts=function(t){return e.get("/contacts")}}])}),define("service/projectsService",["modules/app"],function(e){e.service("projectsService",["$http",function(e){this.getProjects=function(t){return e.get("/projects")}}])}),define("controllers/loginController",["modules/app","service/loginService","service/contactsService","service/projectsService"],function(e){e.controller("loginController.login",["$q","$scope","$location","$sessionStorage","loginService","contactsService","projectsService",function(e,t,n,r,i,s,o){t.login=function(){i.login(t.email,t.password).then(function(t){return e.all([s.getContacts(),o.getProjects()])}).then(function(e){r.$default({contacts:e[0].data}),r.$default({projects:e[1].data});var t=n.search().sendTo;t?(n.search("sendTo",null),n.path(t)):n.path("/entries/current")}).then(null,function(e){e.status==401?t.$root.alert="Sorry, your credentials didn't match! Please try again.":t.$root.alert="Sorry, something bad happened! Please try again later.",t.password=""})}}]).controller("loginController.logout",["$location","$cookies",function(e,t){delete t.authToken,delete t.accountId,e.path("/login")}])}),define("routes/loginRoutes",["modules/app","service/redirectService","controllers/loginController"],function(e){e.config(["$routeProvider",function(e){e.when("/",{resolve:{redirect:["redirectService",function(e){e.validateLogin()}]}}).when("/login",{controller:"loginController.login",templateUrl:"partials/login.html"}).when("/logout",{controller:"loginController.logout",templateUrl:"partials/login.html"}).otherwise({redirectTo:"/"})}])}),define("service/entriesService",["modules/app"],function(e){e.service("entriesService",["$http",function(e){var t=function(e){var t=e.getFullYear(),n=e.getMonth();return new Date(t,n+1,0)},n=function(e){var t=e.getMonth()+1;return e.getDate()+"/"+t+"/"+e.getFullYear()};this.getEntries=function(r,i,s){var o=new Date(i,r-1,1),u=n(o),a=n(t(o));return e.get("/entries?from="+u+"&to="+a)},this.addBulkEntries=function(t,r,i,s){var o={contactId:t.id,projectId:r.id,duration:i*60*60,dates:s.map(function(e){return n(e)})};return e.post("/entries/bulk/add",o)},this.delete=function(t){return e.delete("/entries/"+t)},this.deleteBulkEntries=function(t){return e.post("/entries/bulk/delete",{entryIds:t})}}])}),define("controllers/entriesController",["modules/app","service/entriesService"],function(e){var t=function(e){var t=e.getMonth()+1;return t+"/"+e.getFullYear()},n=function(e){var t=["January","February","March","April","May","June","July","August","September","October","November","December"];return t[e-1]},r=function(e,t){var n=[],r=new Date(t,e-1,1),i=new Date(t,e,0);for(var s=r;s<=i;s=new Date(t,e-1,s.getDate()+1))n.push(s);return n},i=function(e){var t=new Date;return e.filter(function(e){return e<=t&&e.getDay()>=1&&e.getDay()<=5})};e.controller("entriesController",["$scope","$routeParams","$sessionStorage","entriesService",function(e,s,o,u){var a=function(){u.getEntries(s.month,s.year).then(function(t){var n=t.data.map(function(e){return{id:e.id,date:e.date,contact:e.contact?o.contacts.filter(function(t){return t.id==e.contact})[0].name:"",project:e.project?o.projects.filter(function(t){return t.id==e.project})[0].name:"",duration:e.duration}});e.entries=n})};a();var f=new Date;e.today=f;var l=new Date(s.year,s.month-2,1);e.previousMonthYear=t(l);var c=new Date(s.year,s.month,1);c<f&&(e.nextMonthYear=t(c)),e.currentMonthYear=n(s.month)+" "+s.year,e.contacts=o.contacts,e.projects=o.projects,e.selectedDates=[],e.dates=r(s.month,s.year),e.deleteEntry=function(t){u.delete(t).then(function(){e.alertMessage="Entry deleted successfully!",a()})},e.toggleWeekdays=function(){e.selectWeekdays?e.selectedDates=i(e.dates):e.selectedDates=[]},e.toggleSelection=function(t){var n=e.selectedDates.indexOf(t);n>-1?e.selectedDates.splice(n,1):e.selectedDates.push(t)},e.addEntries=function(){u.addBulkEntries(e.selectedContact,e.selectedProject,e.duration,e.selectedDates).then(function(){e.selectedDates=[],e.selectWeekdays=!1,e.alertMessage="Entries added successfully!",a()})},e.selectedEntries=[],e.selectEntry=function(t){var n=e.selectedEntries.indexOf(t);n>-1?e.selectedEntries.splice(n,1):e.selectedEntries.push(t)},e.selectAllEntries=function(){e.selectEntries?e.selectedEntries=e.entries.map(function(e){return e.id}):e.selectedEntries=[]},e.deleteSelected=function(){u.deleteBulkEntries(e.selectedEntries).then(function(){e.selectEntries=!1,e.selectedEntries=[],e.alertMessage="Entries deleted successfully!",a()})}}])}),define("routes/entriesPageRoutes",["modules/app","service/redirectService","controllers/entriesController"],function(e){e.config(["$routeProvider",function(e){e.when("/entries/current",{resolve:{redirect:["redirectService",function(e){e.currentEntries()}]}}).when("/entries/:month/:year",{controller:"entriesController",templateUrl:"partials/entries.html"})}])}),require.config({baseUrl:"js",paths:{jquery:"//code.jquery.com/jquery-2.0.3.min",angular:"//ajax.googleapis.com/ajax/libs/angularjs/1.1.5/angular.min","angular-storage":"//rawgithub.com/gsklee/ngStorage/master/ngStorage.min",bootstrap:"//netdna.bootstrapcdn.com/bootstrap/3.0.1/js/bootstrap.min","angular-cookies":"//ajax.googleapis.com/ajax/libs/angularjs/1.1.5/angular-cookies.min"},shim:{"angular-storage":{exports:"angular-storage",deps:["angular"]},"angular-cookies":{exports:"angular-cookies",deps:["angular"]},angular:{exports:"angular"},bootstrap:{exports:"bootstrap",deps:["jquery"]}}}),require(["angular","bootstrap","interceptors/loadingInterceptor","interceptors/authenticationInterceptor","routes/loginRoutes","routes/entriesPageRoutes"],function(e){e.bootstrap(document,["app"])}),define("main",function(){});